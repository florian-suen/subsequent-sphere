---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import FormattedDate from "../components/FormattedDate.astro";
import { Image } from "astro:assets";
import MainBody from "../components/MainBody.astro";
type Props = CollectionEntry<"blog">["data"];
const { title, description, pubDate, updatedDate, heroImage, isAbout } =
  Astro.props;
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
    <style>
      .hero-image {
        width: 100%;
      }
      .hero-image img {
        display: block;
        margin: 0 auto;
        border-radius: 12px;
        box-shadow: var(--box-shadow);
      }
      .prose {
        width: 720px;
        max-width: calc(100% - 2em);
        margin: auto;
        padding: 1em;
        color: rgb(var(--gray-dark));
      }

      @media screen and (max-width: 720px) {
        .prose {
          padding: 1em 0em;
        }
      }
      .title {
        margin-bottom: 1em;
        padding: 1em 0;
        text-align: center;
        line-height: 1;
      }
      .date {
        margin-bottom: 0.5em;
        color: rgb(var(--gray));
      }
      .last-updated-on {
        font-style: italic;
      }
    </style>
  </head>

  <MainBody>
    <article>
      <div class="hero-image">
        {heroImage && <Image width={600} height={310} src={heroImage} alt="" />}
      </div>
      <div class="prose">
        <div class="title">
          <div class="date">
            <FormattedDate date={pubDate} />
            {
              updatedDate && (
                <div class="last-updated-on">
                  Last updated on <FormattedDate date={updatedDate} />
                </div>
              )
            }
          </div>
          <h1 class="mt-5">{title}</h1>
          <hr />
        </div>
        <slot />
      </div>

      {!isAbout && <section class="giscus-container mt-15" />}
    </article>
  </MainBody>
</html>

<script>
  const giscusTheme = document.documentElement.classList.contains("dark")
    ? "catppuccin_frappe"
    : "catppuccin_latte";
  let giscusAttributes = {
    src: "https://giscus.app/client.js",
    "data-repo": "florian-suen/subsequent-sphere",
    "data-repo-id": "R_kgDOO7y0vg",
    "data-category": "Announcements",
    "data-category-id": "DIC_kwDOO7y0vs4CsaZZ",
    "data-mapping": "pathname",
    "data-strict": "0",
    "data-reactions-enabled": "1",
    "data-emit-metadata": "0",
    "data-input-position": "bottom",
    "data-theme": giscusTheme,
    "data-lang": "en",
    crossorigin: "anonymous",
    async: "",
  };

  let giscusScript = document.createElement("script");
  Object.entries(giscusAttributes).forEach(([key, value]) =>
    giscusScript.setAttribute(key, value),
  );
  document.querySelector(".giscus-container")?.appendChild(giscusScript);
</script>
